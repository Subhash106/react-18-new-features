import Layout from "../layout";

const Home = () => {
  return (
    <Layout>
      <h1>New features in React 18</h1>
      <p>
        I this blog we will understand the new feature of the React 18.
        Following are the new features introduced in the latest react version.
      </p>

      <ul>
        <li>Batch updates</li>
        <li>Transition, urgent and non-urgent updates</li>
        <li>New Suspense Feature</li>
      </ul>

      <p>
        React also introduced new hooks which have out of the box advantages.
        Following are the important hooks introduced in React 18.
      </p>
      <ul>
        <li>useId</li>
        <li>useTransition</li>
        <li>useDeferredValue</li>
      </ul>
      <section id="automatic__batching">
        <h2>Automatic batching</h2>
        <p>
          Automatic batching aims to minimise the re-render. Prior to react 18,
          State updates inside setTimeouts, or inside async code like fetching
          data and then update the state inside, was not batched. So if you
          update state twice inside setTimeout, it will re-render the components
          twice. But starting from React 18, automatic batching applies to all
          kind of data updates.
        </p>
      </section>

      <section id="transition">
        <h2>Transition</h2>
        <p>
          Transition helps to intrup the state update. There are two types of
          updates in react. Urgent updates like typing in the input field.
        </p>
      </section>

      <section id="transition">
        <h2>New Suspense Feature</h2>
        <p>
          New suspense feature only workes when data is fetched from
          suspense-enabled data sources or code spliting with lazy.
        </p>
      </section>
      <section id="use_id">
        <h2>useId</h2>
        <p>
          useId hook generates unique id. You can use ids generated by useId
          hook when there is a chance of duplicasy. We should not use ids
          generated by useId hook as key inside list.
        </p>
      </section>
      <section id="use_transition">
        <h2>useTransition</h2>
        <p>
          Transition helps to intrup the state update. There are two types of
          updates in react. Urgent updates like typing in the input field.
        </p>
      </section>
      <section id="use_deferred_value">
        <h2>useDeferredValue</h2>
        <p>
          Transition helps to intrup the state update. There are two types of
          updates in react. Urgent updates like typing in the input field.
        </p>
      </section>
    </Layout>
  );
};

export default Home;
